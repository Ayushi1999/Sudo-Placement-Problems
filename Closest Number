/* Given an array of sorted integers. The task is to find the closest value to the given number in array. Array may contain duplicate values.
Note: If the difference is same for two values print the value which is greater than the given number.

Input:
2
4 4
1 3 6 7
7 4
1 2 3 5 6 8 9

Output:
3
5  */



import java.util.*;
import java.lang.*;
import java.io.*;

class GFG 
{
    
    static int maxDiff(int a,int b,int target)
    {
        if((target-a)>=(b-target))
        {
            return b;
        }
        else
        {
            return a;
        }
    }
        
    static int fun(int[] arr,int k,int n)
    {
        if(k<=arr[0])
        {
            return arr[0];
        }
        if(k>=arr[n-1])
        {
            return arr[n-1];
        }
        int l = 0;
        int r = n-1;
        while(l<r)
        {
            int mid = (l+r)/2;
            if(k == arr[mid])
            {
                return arr[mid];
            }
            else 
            {
                if(k<arr[mid])
                {
                    if(mid>=0 && k>arr[mid-1])
                        return maxDiff(arr[mid-1],arr[mid],k);
                    r--;
                }
                else 
                {
                    if(mid<n && k<arr[mid+1])
                        return maxDiff(arr[mid],arr[mid+1],k);
                    l++;
                }
            }
        }
        return -1;
    }
    
	public static void main (String[] args) {
		//code
		Scanner scan = new Scanner(System.in);
		int t = scan.nextInt();
		while(t>0)
		{
		    int n = scan.nextInt();
		    int k = scan.nextInt();
		    int[] arr = new int[n];
		    for(int i=0;i<n;i++)
		    {
		        arr[i] = scan.nextInt();
		    }
		    boolean flag = false;
		    System.out.println(fun(arr,k,n));
		//    System.out.println();
		    t--;
		}
	}
}
